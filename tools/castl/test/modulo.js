var assert = require("assert");

var a = [0, 1, -1, 2, -2, 1000, 100000, -21, 21, 1.234, 5.789, -3.2678, -7.896];

var result = [[NaN,0,0,0,0,0,0,0,0,0,0,0,0],[NaN,0,0,1,1,1,1,1,1,1,1,1,1],[NaN,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],[NaN,0,0,0,0,2,2,2,2,0.766,2,2,2],[NaN,0,0,0,0,-2,-2,-2,-2,-0.766,-2,-2,-2],[NaN,0,0,0,0,0,1000,13,13,0.4600000000000115,4.292000000000051,0.05320000000005631,5.104000000000012],[NaN,0,0,0,0,0,0,19,19,0.3420000000011516,0.814000000005155,2.0522000000056315,5.05600000000117],[NaN,0,0,-1,-1,-21,-21,0,0,-0.02200000000000024,-3.633000000000001,-1.393200000000001,-5.208],[NaN,0,0,1,1,21,21,0,0,0.02200000000000024,3.633000000000001,1.393200000000001,5.208],[NaN,0.23399999999999999,0.23399999999999999,1.234,1.234,1.234,1.234,1.234,1.234,0,1.234,1.234,1.234],[NaN,0.7889999999999997,0.7889999999999997,1.7889999999999997,1.7889999999999997,5.789,5.789,5.789,5.789,0.8529999999999998,0,2.5212,5.789],[NaN,-0.2677999999999998,-0.2677999999999998,-1.2677999999999998,-1.2677999999999998,-3.2678,-3.2678,-3.2678,-3.2678,-0.7997999999999998,-3.2678,0,-3.2678],[NaN,-0.8959999999999999,-0.8959999999999999,-1.896,-1.896,-7.896,-7.896,-7.896,-7.896,-0.492,-2.107,-1.3604000000000003,0]]

var tmp;
for(i = 0 ; i<a.length ; ++i) {
    for(j = 0 ; j<a.length ; ++j) {
         tmp = a[i] % a[j];
         assert(Math.abs(result[i][j] - tmp) < 0.00000001 || (Number.isNaN(tmp) && Number.isNaN(result[i][j])));
    }
}

//~ generator
//~ var o = [];
//~ for(i = 0 ; i<a.length ; ++i) {
    //~ o[i] = []
    //~ for(j = 0 ; j<a.length ; ++j) {
        //~ o[i].push(a[i] % a[j]);
    //~ }
//~ }
//~ 
//~ console.log(o);
